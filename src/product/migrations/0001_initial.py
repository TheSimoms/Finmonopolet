# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-07-31 12:41
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('store', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name=b'Name')),
                ('canonical_name', models.CharField(db_index=True, max_length=255, verbose_name=b'Canonical name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=255, verbose_name=b'Slug')),
            ],
            options={
                'ordering': ('canonical_name',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name=b'Name')),
                ('canonical_name', models.CharField(db_index=True, max_length=255, verbose_name=b'Canonical name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=255, verbose_name=b'Slug')),
            ],
            options={
                'ordering': ('canonical_name',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name=b'Name')),
                ('canonical_name', models.CharField(db_index=True, max_length=255, verbose_name=b'Canonical name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=255, verbose_name=b'Slug')),
            ],
            options={
                'ordering': ('canonical_name',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name=b'Name')),
                ('canonical_name', models.CharField(db_index=True, max_length=255, verbose_name=b'Canonical name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=255, verbose_name=b'Slug')),
                ('product_number', models.IntegerField(db_index=True, unique=True, verbose_name=b'Product ID')),
                ('url', models.URLField(verbose_name=b'Product URL')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name=b'Last updated')),
                ('volume', models.DecimalField(db_index=True, decimal_places=2, max_digits=5, verbose_name=b'Volume')),
                ('price', models.DecimalField(db_index=True, decimal_places=2, max_digits=8, verbose_name=b'Price')),
                ('litre_price', models.DecimalField(db_index=True, decimal_places=2, max_digits=8, verbose_name=b'Price per litre')),
                ('alcohol_price', models.DecimalField(db_index=True, decimal_places=2, max_digits=8, null=True, verbose_name=b'Price per unit of alcohol')),
                ('fullness', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name=b'Fullness')),
                ('freshness', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name=b'Freshness')),
                ('tannins', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name=b'Tannins')),
                ('bitterness', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name=b'Bitterness')),
                ('sweetness', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name=b'Sweetness')),
                ('color', models.TextField(null=True, verbose_name=b'Color description')),
                ('smell', models.TextField(null=True, verbose_name=b'Smell description')),
                ('taste', models.TextField(null=True, verbose_name=b'Taste description')),
                ('district', models.CharField(max_length=255, null=True, verbose_name=b'District of origin')),
                ('sub_district', models.CharField(max_length=255, null=True, verbose_name=b'Sub district of origin')),
                ('vintage', models.IntegerField(db_index=True, null=True, verbose_name=b'Vintage')),
                ('feedstock', models.TextField(null=True, verbose_name=b'Ingredients')),
                ('production_method', models.TextField(null=True, verbose_name=b'Production method')),
                ('alcohol', models.DecimalField(db_index=True, decimal_places=2, max_digits=4, verbose_name=b'Alcohol percentage')),
                ('sugar', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name=b'Grams of sugar per litre')),
                ('acid', models.DecimalField(decimal_places=2, max_digits=5, null=True, verbose_name=b'Grams of acid per litre')),
                ('storage', models.TextField(null=True, verbose_name=b'How to store product')),
                ('wholesaler', models.CharField(max_length=255, null=True, verbose_name=b'Wholesaler')),
                ('distributor', models.CharField(max_length=255, null=True, verbose_name=b'Distributor')),
                ('packaging', models.CharField(max_length=255, verbose_name=b'Packaging type')),
                ('cork', models.CharField(max_length=255, null=True, verbose_name=b'Cork type')),
                ('active', models.BooleanField(default=True, verbose_name=b'Tilgjengelig')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='product.Category', verbose_name=b'Category')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='product.Country', verbose_name=b'Country of origin')),
                ('producer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='product.Producer', verbose_name=b'Producer')),
            ],
            options={
                'ordering': ('canonical_name', 'volume'),
            },
        ),
        migrations.CreateModel(
            name='Selection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name=b'Name')),
                ('canonical_name', models.CharField(db_index=True, max_length=255, verbose_name=b'Canonical name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=255, verbose_name=b'Slug')),
            ],
            options={
                'ordering': ('canonical_name',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Suits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name=b'Name')),
                ('canonical_name', models.CharField(db_index=True, max_length=255, verbose_name=b'Canonical name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=255, verbose_name=b'Slug')),
            ],
            options={
                'ordering': ('canonical_name',),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='product',
            name='selection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='product.Selection', verbose_name=b'Selection'),
        ),
        migrations.AddField(
            model_name='product',
            name='store_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='store.StoreCategory', verbose_name=b'Store category'),
        ),
        migrations.AddField(
            model_name='product',
            name='suits',
            field=models.ManyToManyField(db_index=True, related_name='products', to='product.Suits', verbose_name=b'Suits'),
        ),
    ]
